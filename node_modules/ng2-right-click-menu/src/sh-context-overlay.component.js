var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { EventEmitter } from '@angular/core';
import { Output } from '@angular/core';
import { Component } from '@angular/core';
var ShContextOverlayComponent = (function () {
    function ShContextOverlayComponent() {
        this.onClick = new EventEmitter();
    }
    return ShContextOverlayComponent;
}());
__decorate([
    Output(),
    __metadata("design:type", Object)
], ShContextOverlayComponent.prototype, "onClick", void 0);
ShContextOverlayComponent = __decorate([
    Component({
        selector: 'sh-context-overlay',
        template: "<div class=\"sh-context-overlay\" (mousedown)=\"onClick.emit()\"></div>",
        styles: ["\n    .sh-context-overlay{\n      position: fixed;\n      top:0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      z-index: 99;\n      background-color: transparent;\n   }\n  "]
    })
], ShContextOverlayComponent);
export { ShContextOverlayComponent };
//# sourceMappingURL=sh-context-overlay.component.js.map
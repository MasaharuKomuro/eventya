{"version":3,"file":"sh-context-sub-menu.directive.js","sourceRoot":"","sources":["../../src/sh-context-sub-menu.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { IShContextOptions } from './sh-context-options';\nimport { Directive, Output, ElementRef, EventEmitter, Input, HostListener, ViewContainerRef, ComponentFactoryResolver, ComponentRef, OnInit } from \"@angular/core\";\n\nimport { IShContextMenuItem } from \"./sh-context-item\";\nimport { ShContextMenuComponent, ShContextPosition } from \"./sh-context-menu.component\";\nimport { ShContextService } from \"./sh-context-service\";\n\n@Directive({\n  selector: '[sh-context-sub-menu]'\n})\nexport class ShContextSubMenuDirective implements OnInit {\n  @Input('sh-context-sub-menu') menuItems: IShContextMenuItem[];\n  @Input('sh-data-context') dataContext: any;\n  @Output() closeSubMenu = new EventEmitter();\n\n  options: IShContextOptions;\n  ctxComponent: ComponentRef<ShContextMenuComponent>;\n\n  constructor(\n    private viewRef: ViewContainerRef,\n    private elmRef: ElementRef,\n    private resolver: ComponentFactoryResolver,\n    private ctxService: ShContextService\n  ) { }\n\n  ngOnInit(): void {\n    this.options = this.ctxService.getOptions();\n  }\n\n  @HostListener('mouseover', ['$event'])\n  onMouseOver(event: MouseEvent) {\n    this.closeCurrent();\n    this.ctxComponent = this.createContextComponent();\n\n    this.registerBindings();\n    this.registerEvents();\n    this.setLocation();\n\n    return false;\n  }\n\n  registerEvents() {\n    this.ctxComponent.instance.onClose.subscribe(() => {\n      this.closeSubMenu.emit();\n    });\n  }\n\n  registerBindings() {\n    this.ctxComponent.instance.items = this.menuItems;\n    this.ctxComponent.instance.dataContext = this.dataContext;\n  }\n\n  createContextComponent(): ComponentRef<ShContextMenuComponent> {\n    let shContextMenuFactory = this.resolver.resolveComponentFactory(ShContextMenuComponent);\n    let shContextComponentRef = this.viewRef.createComponent(shContextMenuFactory);\n\n    return shContextComponentRef;\n  }\n\n  setLocation() {\n    const { top, left, width } =\n      this.elmRef.nativeElement.getClientRects()[0];\n\n    let position: ShContextPosition = {\n      top: top,\n      left: this.options.rtl ? left : left + width\n    };\n\n    this.ctxComponent.instance.position = position;\n  }\n\n  closeMenu() {\n    this.closeSubMenu.emit();\n  }\n\n  closeCurrent() {\n    this.viewRef.clear();\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
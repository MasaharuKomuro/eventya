var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ElementRef } from '@angular/core';
import { Input } from '@angular/core';
import { Directive } from '@angular/core';
var HtmlDirective = (function () {
    function HtmlDirective(elmRef) {
        this.elmRef = elmRef;
    }
    HtmlDirective.prototype.ngAfterContentInit = function () {
        this.elmRef.nativeElement.insertAdjacentHTML('afterbegin', this.content);
    };
    return HtmlDirective;
}());
__decorate([
    Input('sh-html'),
    __metadata("design:type", String)
], HtmlDirective.prototype, "content", void 0);
HtmlDirective = __decorate([
    Directive({
        selector: '[sh-html]'
    }),
    __metadata("design:paramtypes", [ElementRef])
], HtmlDirective);
export { HtmlDirective };
//# sourceMappingURL=html.directive.js.map